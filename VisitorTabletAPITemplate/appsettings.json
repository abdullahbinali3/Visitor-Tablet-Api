{
  "AllowedHosts": "*",
  "AppSettings": {
    "DataProtection": {
      /* To generate a new certificate:
         "C:\Program Files\Git\usr\bin\openssl.exe" req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes -keyout myportal.oraclecms.com-keyring.key -out myportal.oraclecms.com-keyring.crt
         "C:\Program Files\Git\usr\bin\openssl.exe" pkcs12 -export -out myportal.oraclecms.com-keyring.pfx -inkey myportal.oraclecms.com-keyring.key -in myportal.oraclecms.com-keyring.crt
         The above generates a self-signed certificate with 10 years (365 * 10 days) expiry.
         After entering the second command, you will be prompted to specify a password. The password should be random and fairly long (e.g. 64 characters).
         Some special characters are problematic and won't allow the key to be used, so try keeping it simple with uppercase, lowercase, numbers and dashes/understores.
         After generating the certificate, store the .pfx file into the /Certificates folder and specify the filename below, as well as the certificate password you chose.
         If you get an invaild password error on application start up, and you're sure the details are correct, then it may be because of problematic symbuls used in theh password.
      */
      "CertificateFilename": "example.oraclecms.com-keyring.pfx",
      "CertificatePassword": "1VJK=*z=2y6pK:lNC=3?e^g/7/H+##lfvTT~^XXY96Pax!mtVb,6gZGtxk_P*9*QE8d~^~by;QMb4eSV2HG,J1#LDJrTlEZ#pgB3ATLm9Zf=d3KlyhUz:vKC-,=U*I/vv/lyh.N@5THy?NEXyPUx6vbYYu3WZ4lXxj8!q0oAEk1|E3hI=|EfoH1El;ioaBk370:xnp0H@qtxgw4uboh/tk5^2A4eGkf8,+n=GLYx2zIl7ZcK5nkPHPtv*Wdmqf:N"
    },
    "ConnectionStrings": {
      "VisitorTablet": "Data Source=localhost\\SQLEXPRESS;Initial Catalog=VisitorTablet;User ID=admin;Password=123;TrustServerCertificate=true"
    },
    "Cors": {
      /* List of production URLs to allow incoming requests from. */
      "ProductionUrls": [
        "https://example.oraclecms.com"
      ],
      /* List of development URLs to allow incoming requests from. */
      "DevelopmentUrls": [ "http://localhost:5000", "http://localhost:5001" ]
    },
    "UserSession": {
      /* session expiration time used for both Cookie + Jwt auth */
      "UserSessionTimeoutMinutes": 4500 // 60 minutes x 75 hours = 4500 minutes = 3 days 3 hrs
    },
    "Jwt": {
      /* Jwt Token signing key */
      "TokenSigningKey": "ofYp@bm2N*z2i.AG!6BAIz_M6q?XR!3Ep:d!Bp9zg@|_KrnXp95rZ3wB#XA=js_RIMSOLAIR1j-xYi+80g_vZDtp%p~4dhGAOZnU,PJe~b@V=+3kh1z0lg2dYIx-wO*XMh%Q*GJJF=5;KRwa0Ai:lQUPOXM_1ti|KT@BMHL1=aPGjM_HENdDb~=ecdD:YC4!#Trphkq6GhT21iJ.vPc?.prLBf@jg5;?lSgvr+4JfxG;nWI3COL:ZtBk.7i?zU*x",
      /* Access token expiry time in minutes - should be very short e.g. a few minutes, because a user can't actually logout with JWT auth. */
      "AccessTokenExpiryMinutes": 5
    },
    "Password": {
      /* BcryptCost is the complexity of the password hashing function - the larger number, the slower the calculation time
         and therefore the stronger the hash. Must be between 9 and 16. A cost of 9 or 10 is a good value.
         Complexity and calculation time increases exponentially with each +1 to cost. */
      "BcryptCost": 11,
      /* Pepper is used to make user's passwords stronger and should be considered a secret and never shared anywhere.
         Passwords should be considered compromised if the pepper is leaked, as weak passwords can be trivially broken with it. */
      "Pepper": "Orjlzlb8iUc*0QOEkE?I8%GPo,Y~JlhAsu8Z=QvmRM:HlHZ1jY7%SUM%VD^8zoo=q;.@OR^c-.=A%dBDVHr*p-j:SZn7l7*A3U~KAFz^9;QDu-+TzXOBdQpBZ1rwAk:g=G;nv2Dahnc+IeH3^H,aRBJ?-2XfN|b8%dXV^P4rO1#.r8l:IJjuisl~=JSqnKg7*hHOW*t*?8lxEY8JKO+FRxWzLV#WME7L%Yx=zxfzUITT7U3ll*oqb4e:@HZ*rGr5",
    },
    "EmailNotifications": {
      /* Application Name to appear in the subject line of email notifications. */
      "ApplicationName": "Example Application",
      /* From Address for email notifications to be sent from. */
      "FromAddress": "noreply@oraclecms.com"
    }
  }
}
